"use strict";

function wrapper(my) {
    function response(socket, start) {
        var diff = process.hrtime(start);
        diff = 1e9 * diff[0] + diff[1];
        var data = socket._bytesDispatched * __byte / __denominator;
        return (data / (diff / __time)).toFixed(2) + __out;
    }
    function request(socket, start) {
        var diff = process.hrtime(start);
        diff = 1e9 * diff[0] + diff[1];
        var data = socket.bytesRead * __byte / __denominator;
        return (data / (diff / __time)).toFixed(2) + __out;
    }
    var finished = require("on-finished"), __denominator = my.denominator, __byte = my.byte, __time = my.time, __out = my.out;
    return my.response ? function(req, res, start) {
        function finish(err, res) {
            if (!err) {
                var socket = res.req.client, data = response(socket, start);
                return req.transferRate = res.transferRate = data, data;
            }
        }
        if (!req || "object" != typeof req) throw new TypeError("req required");
        if (!res || "object" != typeof res) throw new TypeError("res required");
        if (!start || Array.isArray(start) === !1) throw new TypeError("start required");
        if (finished.isFinished(res)) {
            var socket = res.socket || res.req.client, data = response(socket, start);
            return req.transferRate = res.transferRate = data, data;
        }
        finished(res, finish);
    } : function(req, res, start) {
        function finish(err, req) {
            if (!err) {
                var socket = req.client._handle || req.client.server._handle, data = request(socket, start);
                return req.transferRate = res.transferRate = data, data;
            }
        }
        if (!req || "object" != typeof req) throw new TypeError("req required");
        if (!res || "object" != typeof res) throw new TypeError("res required");
        if (!start || Array.isArray(start) === !1) throw new TypeError("start required");
        if (finished.isFinished(req)) {
            var socket = req.socket, data = request(socket, start);
            return req.transferRate = res.transferRate = data, data;
        }
        finished(req, finish);
    };
}

function transfer(opt) {
    var options = opt || Object.create(null), my = {
        denominator: 1024,
        byte: 1,
        out: " KB/s",
        time: 1e9,
        response: !0
    };
    return "Byte" === options.data ? (my.denominator = 1, my.byte = 1, my.out = " Byte") : "KB" === options.data ? (my.denominator = 1024, 
    my.byte = 1, my.out = " KB") : "MB" === options.data ? (my.denominator = 1048576, 
    my.byte = 1, my.out = " MB") : "bit" === options.data ? (my.denominator = 1, my.byte = 8, 
    my.out = " bit") : "Kb" === options.data ? (my.denominator = 1e3, my.byte = 8, my.out = " Kbit") : "Mb" === options.data && (my.denominator = 1e6, 
    my.byte = 8, my.out = " Mbit"), "nanosecond" === options.time ? (my.time = 1, my.out += "/ns") : "millisecond" === options.time ? (my.time = 1e6, 
    my.out += "/ms") : "second" === options.time && (my.time = 1e9, my.out += "/s"), 
    options.response === !1 && (my.response = !1), options.output === !1 && (my.out = ""), 
    wrapper(my);
}

module.exports = transfer;
