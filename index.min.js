"use strict";

function wrapper(my) {
    function response(socket, start) {
        var diff = process.hrtime(start), nanoseconds = 1e9 * diff[0] + diff[1], data = (socket.bytesWritten - ~~socket.transferRateBytesWritten) * __byte / __denominator;
        return socket.transferRateBytesWritten = socket.bytesWritten, (data / (nanoseconds / __time)).toFixed(2) + __out;
    }
    function request(socket, start) {
        var diff = process.hrtime(start), nanoseconds = 1e9 * diff[0] + diff[1], data = (socket.bytesRead - ~~socket.transferRateBytesRead) * __byte / __denominator;
        return socket.transferRateBytesRead = socket.bytesRead, (data / (nanoseconds / __time)).toFixed(2) + __out;
    }
    var finished = require("on-finished"), __denominator = my.denominator, __byte = my.byte, __time = my.time, __out = my.out;
    return my.response ? function(req, res, start) {
        if ("object" != typeof req) throw new TypeError("req required");
        if ("object" != typeof res) throw new TypeError("res required");
        if (!1 === Array.isArray(start)) throw new TypeError("start required");
        if (finished.isFinished(res)) {
            var data = response(res.socket || req.socket, start);
            return req.transferRate = res.transferRate = data, data;
        }
        finished(res, function(err, res) {
            if (!err) {
                var data = response(res.req.socket, start);
                req.transferRate = res.transferRate = data;
            }
        });
    } : function(req, res, start) {
        if ("object" != typeof req) throw new TypeError("req required");
        if ("object" != typeof res) throw new TypeError("res required");
        if (!1 === Array.isArray(start)) throw new TypeError("start required");
        if (finished.isFinished(req)) {
            var data = request(req.socket, start);
            return req.transferRate = res.transferRate = data, data;
        }
        finished(req, function(err, req) {
            if (!err) {
                var data = request(req.socket, start);
                req.transferRate = res.transferRate = data;
            }
        });
    };
}

function transfer(opt) {
    var options = opt || Object.create(null), my = {
        denominator: 1024,
        byte: 1,
        out: " KB/s",
        time: 1e9,
        response: !0
    };
    return "Byte" === options.data ? (my.denominator = 1, my.byte = 1, my.out = " Byte") : "KB" === options.data ? (my.denominator = 1024, 
    my.byte = 1, my.out = " KB") : "MB" === options.data ? (my.denominator = 1048576, 
    my.byte = 1, my.out = " MB") : "bit" === options.data ? (my.denominator = 1, my.byte = 8, 
    my.out = " bit") : "Kb" === options.data ? (my.denominator = 1e3, my.byte = 8, my.out = " Kbit") : "Mb" === options.data && (my.denominator = 1e6, 
    my.byte = 8, my.out = " Mbit"), "nanosecond" === options.time ? (my.time = 1, my.out += "/ns") : "millisecond" === options.time ? (my.time = 1e6, 
    my.out += "/ms") : "second" === options.time && (my.time = 1e9, my.out += "/s"), 
    !1 === options.output && (my.out = ""), !1 === options.response && (my.response = !1), 
    wrapper(my);
}

module.exports = transfer;
